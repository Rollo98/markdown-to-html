{"ast":null,"code":"var _jsxFileName = \"/Users/rolandpaiusan/Desktop/wip/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport marked from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const inputFile = useRef(null);\n  const [htmlObjects, setHtmlObjects] = useState([]);\n  const history = useHistory();\n\n  const useUploadFiles = event => {\n    const {\n      files\n    } = event.target;\n    Object.values(files).forEach(file => getFileContent(file).then(result => setHtmlObjects(prev => [...prev, {\n      name: parseName(file.name),\n      html: result\n    }])));\n  };\n\n  const parseName = name => name.split('.').slice(0, -1).join('.').toLowerCase().replace(/\\W+/g, ' ').split(/ |\\B(?=[A-Z])/).join('-');\n\n  const getFileContent = file => new Promise((res, rej) => {\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      if (reader.readyState === 2) {\n        return res(marked(reader.result));\n      }\n    };\n\n    reader.readAsText(file);\n  });\n\n  const onButtonClick = () => inputFile.current.click();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: onButtonClick,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: htmlObjects.map((htmlObject, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => history.push(`blog/${htmlObject.name}`, {\n          html: htmlObject.html\n        }),\n        children: htmlObject.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: 'none'\n      },\n      accept: \".md\",\n      ref: inputFile,\n      onChange: useUploadFiles,\n      type: \"file\",\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FSNFLyGm3CtGukjjVoep7UdF8MQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rolandpaiusan/Desktop/wip/src/App.js"],"names":["useRef","useState","useHistory","marked","App","inputFile","htmlObjects","setHtmlObjects","history","useUploadFiles","event","files","target","Object","values","forEach","file","getFileContent","then","result","prev","name","parseName","html","split","slice","join","toLowerCase","replace","Promise","res","rej","reader","FileReader","onload","readyState","readAsText","onButtonClick","current","click","map","htmlObject","i","push","display"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBI,OAArB,CAA8BC,IAAD,IAC3BC,cAAc,CAACD,IAAD,CAAd,CAAqBE,IAArB,CAA2BC,MAAD,IACxBZ,cAAc,CAAEa,IAAD,IAAU,CACvB,GAAGA,IADoB,EAEvB;AAAEC,MAAAA,IAAI,EAAEC,SAAS,CAACN,IAAI,CAACK,IAAN,CAAjB;AAA8BE,MAAAA,IAAI,EAAEJ;AAApC,KAFuB,CAAX,CADhB,CADF;AAQD,GAXD;;AAaA,QAAMG,SAAS,GAAID,IAAD,IAChBA,IAAI,CACDG,KADH,CACS,GADT,EAEGC,KAFH,CAES,CAFT,EAEY,CAAC,CAFb,EAGGC,IAHH,CAGQ,GAHR,EAIGC,WAJH,GAKGC,OALH,CAKW,MALX,EAKmB,GALnB,EAMGJ,KANH,CAMS,eANT,EAOGE,IAPH,CAOQ,GAPR,CADF;;AAUA,QAAMT,cAAc,GAAID,IAAD,IACrB,IAAIa,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxB,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBxB,KAAD,IAAW;AACzB,UAAIsB,MAAM,CAACG,UAAP,KAAsB,CAA1B,EAA6B;AAC3B,eAAOL,GAAG,CAAC3B,MAAM,CAAC6B,MAAM,CAACb,MAAR,CAAP,CAAV;AACD;AACF,KAJD;;AAMAa,IAAAA,MAAM,CAACI,UAAP,CAAkBpB,IAAlB;AACD,GATD,CADF;;AAYA,QAAMqB,aAAa,GAAG,MAAMhC,SAAS,CAACiC,OAAV,CAAkBC,KAAlB,EAA5B;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEF,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACG/B,WAAW,CAACkC,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,kBACf;AACE,QAAA,OAAO,EAAE,MACPlC,OAAO,CAACmC,IAAR,CAAc,QAAOF,UAAU,CAACpB,IAAK,EAArC,EAAwC;AAAEE,UAAAA,IAAI,EAAEkB,UAAU,CAAClB;AAAnB,SAAxC,CAFJ;AAAA,kBAMGkB,UAAU,CAACpB;AANd,SAIOqB,CAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAgBE;AACE,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,GAAG,EAAEvC,SAHP;AAIE,MAAA,QAAQ,EAAEI,cAJZ;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArEM;;GAAML,G;UAGKF,U;;;KAHLE,G","sourcesContent":["import { useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport marked from 'marked'\n\nexport const App = () => {\n  const inputFile = useRef(null)\n  const [htmlObjects, setHtmlObjects] = useState([])\n  const history = useHistory()\n\n  const useUploadFiles = (event) => {\n    const { files } = event.target\n\n    Object.values(files).forEach((file) =>\n      getFileContent(file).then((result) =>\n        setHtmlObjects((prev) => [\n          ...prev,\n          { name: parseName(file.name), html: result },\n        ])\n      )\n    )\n  }\n\n  const parseName = (name) =>\n    name\n      .split('.')\n      .slice(0, -1)\n      .join('.')\n      .toLowerCase()\n      .replace(/\\W+/g, ' ')\n      .split(/ |\\B(?=[A-Z])/)\n      .join('-')\n\n  const getFileContent = (file) =>\n    new Promise((res, rej) => {\n      const reader = new FileReader()\n      reader.onload = (event) => {\n        if (reader.readyState === 2) {\n          return res(marked(reader.result))\n        }\n      }\n\n      reader.readAsText(file)\n    })\n\n  const onButtonClick = () => inputFile.current.click()\n\n  return (\n    <div>\n      <div className=\"button\" onClick={onButtonClick}>\n        Upload\n      </div>\n      <div id=\"content\">\n        {htmlObjects.map((htmlObject, i) => (\n          <div\n            onClick={() =>\n              history.push(`blog/${htmlObject.name}`, { html: htmlObject.html })\n            }\n            key={i}\n          >\n            {htmlObject.name}\n          </div>\n        ))}\n      </div>\n      <input\n        style={{ display: 'none' }}\n        accept=\".md\"\n        ref={inputFile}\n        onChange={useUploadFiles}\n        type=\"file\"\n        multiple\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}